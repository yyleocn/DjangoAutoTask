# Generated by Django 4.0.3 on 2022-04-22 06:38

import AutoTask.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TaskPackage',
            fields=[
                ('sn', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('createTime', AutoTask.models.TimeStampField()),
                ('createUser', AutoTask.models.UserField(max_length=20)),
                ('priority', models.SmallIntegerField(choices=[(10, 'Max'), (50, 'Scheme'), (100, 'Normal'), (200, 'Idle'), (1000, 'Pause')], default=100)),
                ('type', models.SmallIntegerField(choices=[(0, 'Normal'), (1, 'Scheme')], default=0)),
                ('planTime', AutoTask.models.TimeStampField()),
                ('count', models.PositiveIntegerField(default=0)),
                ('success', models.PositiveIntegerField(default=0)),
                ('fail', models.PositiveIntegerField(default=0)),
                ('running', models.PositiveIntegerField(default=0)),
                ('finished', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TaskScheme',
            fields=[
                ('schemeSn', models.AutoField(primary_key=True, serialize=False)),
                ('createTime', AutoTask.models.TimeStampField()),
                ('createUser', AutoTask.models.UserField(max_length=20)),
                ('priority', models.SmallIntegerField(choices=[(10, 'Max'), (50, 'Scheme'), (100, 'Normal'), (200, 'Idle'), (1000, 'Pause')], default=100)),
                ('crontabStr', models.CharField(max_length=20)),
                ('interval', models.PositiveIntegerField(null=True)),
                ('currentTaskID', models.PositiveBigIntegerField(null=True)),
                ('nextTime', AutoTask.models.TimeStampField(default=0)),
                ('retainTimeLimit', models.PositiveIntegerField(default=604800)),
            ],
        ),
        migrations.CreateModel(
            name='TaskRec',
            fields=[
                ('taskSn', models.BigAutoField(primary_key=True, serialize=False)),
                ('createTime', AutoTask.models.TimeStampField()),
                ('createUser', AutoTask.models.UserField(max_length=20)),
                ('name', models.CharField(max_length=50, null=True)),
                ('group', models.CharField(max_length=50, null=True)),
                ('type', models.SmallIntegerField(choices=[(0, 'Normal'), (1, 'Scheme')], default=0)),
                ('priority', models.PositiveSmallIntegerField(choices=[(10, 'Max'), (50, 'Scheme'), (100, 'Normal'), (200, 'Idle'), (1000, 'Pause')], default=100)),
                ('func', models.CharField(max_length=50)),
                ('args', models.TextField(null=True)),
                ('kwargs', models.TextField(null=True)),
                ('combine', models.BigIntegerField(null=True)),
                ('result', models.BinaryField(null=True)),
                ('callback', models.CharField(default=None, max_length=50, null=True)),
                ('status', models.SmallIntegerField(choices=[(-999, 'Invalid Config'), (-200, 'Callback Error'), (-100, 'Fail'), (-50, 'Error'), (-30, 'Timeout'), (1, 'Normal'), (10, 'Running'), (100, 'Success'), (200, 'Finish')], default=1)),
                ('errorText', models.CharField(default=None, max_length=100, null=True)),
                ('planTime', AutoTask.models.TimeStampField(null=True)),
                ('retryTime', AutoTask.models.TimeStampField(null=True)),
                ('startTime', AutoTask.models.TimeStampField(null=True)),
                ('endTime', AutoTask.models.TimeStampField(null=True)),
                ('timeout', models.SmallIntegerField(null=True)),
                ('delay', models.SmallIntegerField(default=10)),
                ('executorName', models.CharField(max_length=50, null=True)),
                ('retry', models.SmallIntegerField(default=0)),
                ('execute', models.SmallIntegerField(default=0)),
                ('pause', models.BooleanField(default=False)),
                ('cancel', models.BooleanField(default=False)),
                ('package', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taskRec', to='AutoTask.taskpackage')),
                ('scheme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='taskRec', to='AutoTask.taskscheme')),
            ],
        ),
    ]
